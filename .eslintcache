[{"/home/sherwin/coding/hot-robot/src/helpers/settings.js":"1","/home/sherwin/coding/hot-robot/src/components/App.jsx":"2","/home/sherwin/coding/hot-robot/src/helpers/reducer.js":"3","/home/sherwin/coding/hot-robot/src/components/Square.jsx":"4","/home/sherwin/coding/hot-robot/src/reportWebVitals.js":"5","/home/sherwin/coding/hot-robot/src/index.js":"6"},{"size":712,"mtime":1611618278495,"results":"7","hashOfConfig":"8"},{"size":2150,"mtime":1611691329818,"results":"9","hashOfConfig":"8"},{"size":939,"mtime":1611618383193,"results":"10","hashOfConfig":"8"},{"size":666,"mtime":1611620486781,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1611609790054,"results":"12","hashOfConfig":"8"},{"size":515,"mtime":1611615292306,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1c6du9d",{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sherwin/coding/hot-robot/src/helpers/settings.js",["28"],"/home/sherwin/coding/hot-robot/src/components/App.jsx",["29","30","31","32","33","34"],"/home/sherwin/coding/hot-robot/src/helpers/reducer.js",["35"],"import { forwardFunc } from \"./settings\";\n\nexport const reducer = (state, action) => {\n  if (!state.gameOn) {\n    return action.type === \"startGame\" ? { ...state, gameOn: true } : state;\n  }\n  switch (action.type) {\n    case \"incrementScore\":\n      return { ...state, score: state.score + 1 };\n    case \"decrementTime\":\n      return state.time === 0 ? state : { ...state, time: state.time - 1 };\n    case \"forward\":\n      return { ...state, robot: forwardFunc(state.robot, state.direction) };\n    case \"right\":\n      return { ...state, direction: (state.direction + 1) % 4 };\n    case \"left\":\n      return { ...state, direction: (state.direction + 3) % 4 };\n    case \"setTargets\":\n      return { ...state, targetList: action.val };\n    case \"nextTarget\":\n      return {\n        ...state,\n        target: state.targetList[state.score % state.targetList.length],\n      };\n    case \"endGame\":\n      return { ...state, gameOn: false };\n  }\n};\n","/home/sherwin/coding/hot-robot/src/components/Square.jsx",["36","37"],"import PropTypes from 'prop-types';\n\nconst Square = (props) => {\n\n  const image = () => {\n    if (props.robot === props.num) {\n      return (<img className=\"robot\" style={{transform: `rotate(${props.direction * 90}deg)`}} \n    src=\"/pacman-sprite.png\" />);\n    } else if (props.target === props.num) {\n      return (<img className=\"star\" src=\"/star.png\" />)\n    } else {\n      return (<span>{String(props.num)}</span>);\n    }\n  };\n\n  return (\n    <div className=\"square\">\n      {image()}\n    </div>\n  );\n};\n\nexport default Square;\n\nSquare.propTypes = {\n  num: PropTypes.number,\n  robot: PropTypes.number,\n  target: PropTypes.number,\n  direction: PropTypes.number\n};\n","/home/sherwin/coding/hot-robot/src/reportWebVitals.js",[],"/home/sherwin/coding/hot-robot/src/index.js",[],{"ruleId":"38","severity":1,"message":"39","line":5,"column":3,"nodeType":"40","messageId":"41","endLine":14,"endColumn":4},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"46","line":10,"column":7,"nodeType":"44","messageId":"45","endLine":10,"endColumn":12},{"ruleId":"47","severity":1,"message":"48","line":25,"column":6,"nodeType":"49","endLine":25,"endColumn":19,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":62,"column":11,"nodeType":"53","endLine":62,"endColumn":119},{"ruleId":"51","severity":1,"message":"52","line":63,"column":11,"nodeType":"53","endLine":63,"endColumn":114},{"ruleId":"51","severity":1,"message":"52","line":64,"column":11,"nodeType":"53","endLine":64,"endColumn":117},{"ruleId":"38","severity":1,"message":"39","line":7,"column":3,"nodeType":"40","messageId":"41","endLine":27,"endColumn":4},{"ruleId":"51","severity":1,"message":"54","line":7,"column":15,"nodeType":"53","endLine":8,"endColumn":32},{"ruleId":"51","severity":1,"message":"54","line":10,"column":15,"nodeType":"53","endLine":10,"endColumn":55},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'timer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.target'. Either include it or remove the dependency array.","ArrayExpression",["55"],"jsx-a11y/alt-text","<input> elements with type=\"image\" must have a text alternative through the `alt`, `aria-label`, or `aria-labelledby` prop.","JSXOpeningElement","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"56","fix":"57"},"Update the dependencies array to be: [state.robot, state.target]",{"range":"58","text":"59"},[690,703],"[state.robot, state.target]"]